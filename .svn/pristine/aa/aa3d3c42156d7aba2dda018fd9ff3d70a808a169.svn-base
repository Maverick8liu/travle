package com.hg.hgc.web.controller;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.baomidou.kisso.annotation.Action;
import com.baomidou.kisso.annotation.Login;
import com.hg.hgc.core.feature.orm.mybatis.Page;
import com.hg.hgc.core.util.ControllerUtil;
import com.hg.hgc.web.model.User;
import com.hg.hgc.web.service.UserService;

/**
 * 用户管理Controller
 * @author liuguoyu
 *
 * @since 2016年4月29日下午3:44:34
 */

@Controller
@RequestMapping("userManager")
public class UserManagerController {
	@Resource
	UserService userService;
	
	/**
	 * 用户列表
	 * @param model
	 * @param record
	 * @param request
	 * @return
	 */
	@Login(action = Action.Skip)
	@RequestMapping(value = "userList")
	public String UserList(Model model,Page<User> record,HttpServletRequest request){
		int totalCount = userService.countByExample(null);
		Page<User> page = new Page<User>(record.getPageNum(),record.getNumPerPage());
		
		page.setTotalCount(totalCount);
		
		
		List<User> list = userService.selectByExampleAndPage(page, null);
		request.setAttribute("menuList", list);
		request.setAttribute("page", page);
		return "user/user_list";
	}
	
	/**
	 * 跳转到添加
	 * @return
	 */
	@Login(action = Action.Skip)
	@RequestMapping(value = "toUserInsert")
	public String toUserInsert(){
		return "user/user_insert";
	}
	
	/**
	 * 添加
	 * @param model
	 * @param User
	 * @return
	 */
	@Login(action = Action.Skip)
	@ResponseBody
	@RequestMapping(value = "userInsert")
	public String UserInsert(Model model,User User){
		JSONObject json = new JSONObject();
		int isSuc = userService.insert(User);
		if(isSuc == 1){
			json = ControllerUtil.getSuccessJson("保存信息成功！", "UserManager", "", "closeCurrent", "");
		}else{
			json = ControllerUtil.getFaileJson_300("保存信息失败！");
		}
		return json.toJSONString();
	}
	
	/**
	 * 跳转到修改
	 * @return
	 */
	@Login(action = Action.Skip)
	@RequestMapping(value = "toUserModify")
	public String toUserModify(Model model,User record,HttpServletRequest request){
		
		User User = userService.selectById(record.getUserid());
		request.setAttribute("User", User);
		return "user/user_modify";
	}
	
	/**
	 * 修改
	 * @return
	 */
	@Login(action = Action.Skip)
	@ResponseBody
	@RequestMapping(value = "userModify")
	public String UserModify(Model model,User User){
		JSONObject json = new JSONObject();
		int isSuc = userService.update(User);
		if(isSuc == 1){
			json = ControllerUtil.getSuccessJson("保存信息成功！", "UserManager", "", "closeCurrent", "");
		}else{
			json = ControllerUtil.getFaileJson_300("保存信息失败！");
		}
		
		return json.toJSONString();
	}
	
	/**
	 * 删除
	 * @return
	 */
	@Login(action = Action.Skip)
	@ResponseBody
	@RequestMapping(value = "delUser")
	public String delUser(Model model,User User){
		JSONObject json = new JSONObject();
		int isSuc = userService.delete(User.getUserid());
		if(isSuc == 1){
			json = ControllerUtil.getSuccessJson("保存信息成功！", "UserManager", "", "closeCurrent", "");
		}else{
			json = ControllerUtil.getFaileJson_300("保存信息失败！");
		}
		return json.toJSONString();
	}
	
}
